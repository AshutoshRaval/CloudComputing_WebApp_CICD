name: Packer CI Merged

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build AMI and Share
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install

      - name: Display .env file
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=TestDataBase1" >> .env
          echo "PORT=8080" >> .env
          cat .env

      - name: Configure MySQL
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          sudo systemctl start mysql
          sudo systemctl status mysql
          mysql -u ${{ secrets.DB_USER }} -p"${{ secrets.DB_PASSWORD }}" -e "CREATE DATABASE TestDataBase1;"

      - name: Run Integration Tests
        run: npm test


      # - name: Build Application Artifact
      #   run: |
      #     # Replace these commands with the actual build commands for webapp.zip
      #     # For example, if your build command is 'npm run build', use that here.
      #     # Make sure it generates the webapp.zip file.
      #     npm run build
      #     # If the above command generates the webapp.zip file in a specific directory,
      #     # adjust the next line accordingly.
      #     mv path/to/generated/webapp.zip . 4444

      - name: Download webapp repository
        run: zip -r webapp.zip ./

      - name: Configure AWS Credentials
        run: |
              aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws configure set default.region us-east-1  # Replace with your desired AWS region
              aws configure set default.output json
              aws configure set profile.dev.aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws configure set profile.dev.aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}


      - name: Build AMI with Packer
        run: |
          packer init .
          packer fmt -check aws-debian.pkr.hcl
          packer build aws-debian.pkr.hcl

      - name: Capture AMI ID from Packer Output
        id: capture-ami-id
        run: |
          ami_id=$(cat packer-build-output.txt | grep 'artifact,0,id' | cut -d' ' -f2)
          echo "AMI_ID=${ami_id}" >> $GITHUB_ENV
        working-directory: .
        continue-on-error: true  # Ignore errors if the AMI ID is not found

      - name: Share AMI with DEMO Account
        run: |
          aws ec2 modify-image-attribute --image-id $AMI_ID --launch-permission "{\"Add\":[{\"UserId\":\"822421370804\"}]}"
          # Replace <DEMO_ACCOUNT_ID> with the DEMO AWS account ID
